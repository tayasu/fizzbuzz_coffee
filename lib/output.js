// Generated by CoffeeScript 1.4.0
var Browser, Output, Photoshop, Stub, exports,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Output = (function() {

  function Output() {}

  Output.prototype.display = function(str) {
    return str;
  };

  return Output;

})();

Stub = (function(_super) {

  __extends(Stub, _super);

  function Stub() {
    return Stub.__super__.constructor.apply(this, arguments);
  }

  return Stub;

})(Output);

Browser = (function(_super) {
  var colors, numSize, strSize;

  __extends(Browser, _super);

  function Browser() {
    return Browser.__super__.constructor.apply(this, arguments);
  }

  colors = ['#F2385A', '#F5A503', '#E9F1DF', '#4AD9D9', '#36B1BF'];

  numSize = ['18px', '18px', '18px', '18px', '20px', '20px', '24px'];

  strSize = ['32px', '32px', '32px', '32px', '36px', '36px', '48px'];

  Browser.prototype.display = function(str) {
    return (this._decorateStr(str)).appendTo($('body')).fadeIn();
  };

  Browser.prototype._decorateStr = function(str) {
    var color, fontFamily, fontSize, left, rotate, top, webfonts;
    webfonts = WebFontConfig.google.families;
    top = this._rand($(window).height());
    left = this._rand($(window).width());
    color = colors[this._rand(colors.length)];
    rotate = this._rand(360);
    fontSize = numSize[this._rand(numSize.length)];
    if (isNaN(str)) {
      fontSize = strSize[this._rand(strSize.length)];
    }
    fontFamily = webfonts[this._rand(webfonts.length)];
    return $('<div>').attr('id', str).css({
      display: 'none',
      width: '50px',
      position: 'absolute',
      top: top,
      left: left,
      color: color,
      'font-size': fontSize,
      'font-family': fontFamily,
      '-webkit-transform': 'rotate(' + rotate + 'deg)',
      '-moz-transform': 'rotate(' + rotate + 'deg)'
    }).html(str);
  };

  Browser.prototype._rand = function(num) {
    return Math.floor(Math.random() * num);
  };

  return Browser;

})(Output);

Photoshop = (function(_super) {

  __extends(Photoshop, _super);

  function Photoshop() {
    return Photoshop.__super__.constructor.apply(this, arguments);
  }

  return Photoshop;

})(Output);

if (!exports) {
  exports = {};
}

exports.Stub = Stub;

exports.Browser = Browser;

exports.Photoshop = Photoshop;
